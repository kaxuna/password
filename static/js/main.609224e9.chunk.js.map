{"version":3,"sources":["components/Navbar.js","components/Main.js","components/Footer.js","App.js","reportWebVitals.js","index.js","img.png"],"names":["Navbar","_React$useState","React","useState","_React$useState2","_slicedToArray","anchorEl","setAnchorEl","open","Boolean","id","undefined","createElement","Grid","container","justifyContent","alignItems","IconButton","variant","size","sx","position","top","right","zIndex","&:hover","color","onClick","event","currentTarget","aria-describedby","HelpCenterIcon","Popover","onClose","anchorOrigin","vertical","horizontal","Typography","display","p","style","maxWidth","@media (min-width: 200px)","fontSize","fontFamily","@media (min-width: 600px)","Typed","marginTop","strings","typeSpeed","backSpeed","loop","Main","_useState","_useState2","password","setPassword","_useState3","_useState4","platform","setPlatform","_useState5","_useState6","superSecretPassword","setSuperSecretPassword","showPassword","setShowPassword","_React$useState3","_React$useState4","showSuperSecretPassword","setShowSuperSecretPassword","_useState7","_useState8","snackBarOpen","setSnackBarOpen","handleMouseDownPassword","preventDefault","direction","FormControl","m","width","InputLabel","htmlFor","OutlinedInput","value","onChange","newValue","length","target","substring","type","endAdornment","InputAdornment","aria-label","show","onMouseDown","edge","VisibilityOff","Visibility","label","placeholder","Button","height","disabled","generateSuperSecretPassword","navigator","clipboard","writeText","ContentCopyIcon","Snackbar","autoHideDuration","message","hash","i","chr","mess","charCodeAt","calculateCurrentHash","cur","Math","round","String","fromCharCode","hasLower","hasUpper","hasDigit","hasSpecialChar","getStrongPasswordFromHash","minLimit","pow","normilizeHash","Footer","paddingTop","item","xs","GitHubIcon","window","LinkedInIcon","darkTheme","createTheme","palette","mode","App","ThemeProvider","theme","CssBaseline","backgroundImage","concat","image","backgroundSize","minWidth","maxHeight","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","module","exports"],"mappings":"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","file":"static/js/main.609224e9.chunk.js","sourcesContent":["import React from \"react\";\nimport Typed from \"react-typed\";\nimport {Grid, IconButton, Popover, Typography} from \"@mui/material\";\nimport HelpCenterIcon from '@mui/icons-material/HelpCenter';\n\n\nexport default function Navbar() {\n    const [anchorEl, setAnchorEl] = React.useState(null);\n\n    const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n        setAnchorEl(event.currentTarget);\n    };\n\n    const handleClose = () => {\n        setAnchorEl(null);\n    };\n\n    const open = Boolean(anchorEl);\n    const id = open ? 'simple-popover' : undefined;\n    return (\n\n        <Grid\n            container\n            justifyContent=\"center\"\n            alignItems=\"center\"\n        >\n            <IconButton variant='contained'\n                        size=\"large\"\n                        sx={{\n                            position: \"fixed\",\n                            top: 10,\n                            right: 10,\n                            zIndex: 2000,\n                            \"&:hover\": {color: \"primary.main\"}\n                        }}\n                        onClick={handleClick}\n                        aria-describedby={id}\n            >\n                <HelpCenterIcon/>\n            </IconButton>\n            <Popover\n                id={id}\n                open={open}\n                anchorEl={anchorEl}\n                onClose={handleClose}\n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'left',\n                }}\n            >\n                <Typography\n                    display=\"block\"\n                    sx={{p: 2}} style={{\n                    maxWidth: '80vw', // Set the maximum width to occupy the full screen\n                    '@media (min-width: 200px)': {\n                        maxWidth: '50vw', // Adjust the maximum width for larger screens\n                    },\n                    fontSize: \"large\",\n                    fontFamily: \"monospace, emoji, serif\",\n                    color: \"#FFFFFF\"\n                }}>\n                    Imagine this: You have a password for Facebook, and it's \"football123\".\n                    With just a click of a button, something amazing happens.\n                    You're about to see the incredible results!\n                </Typography>\n                <Typography\n                    display=\"block\"\n                    sx={{p: 2}} style={{\n                    maxWidth: '80vw', // Set the maximum width to occupy the full screen\n                    '@media (min-width: 600px)': {\n                        maxWidth: '50vw', // Adjust the maximum width for larger screens\n                    },\n                    fontSize: \"large\",\n                    fontFamily: \"monospace, emoji, serif\",\n                    color: \"#FFFFFF\"\n                }}>\n                    But wait, there's more! Picture a world where forgetting your password\n                    is a thing of the past. Yes, it's true! If you ever forget your password,\n                    don't worry! Just come back to our generator,\n                    and voila! We'll create the exact same password, customized just for your Facebook account.\n                </Typography>\n            </Popover>\n            <Typed\n                style={{\n                    marginTop: \"auto\",\n                    fontSize: \"xxx-large\",\n                    fontFamily: \"monospace, emoji, serif\",\n                    color: \"#FFFFFF\"\n                }}\n\n                strings={[\n                    \"No cookies\",\n                    \"No Data saved\",\n                    \"No Vaults\",\n                    \"Just pure algorithm\"\n                ]}\n                typeSpeed={50}\n                backSpeed={1}\n                loop\n            />\n        </Grid>\n    )\n}","import React, {useState} from \"react\";\nimport {\n    Button,\n    FormControl, Grid,\n    IconButton,\n    InputAdornment,\n    InputLabel,\n    OutlinedInput, Snackbar,\n} from '@mui/material';\nimport ContentCopyIcon from '@mui/icons-material/ContentCopy';\nimport Visibility from '@mui/icons-material/Visibility';\nimport VisibilityOff from '@mui/icons-material/VisibilityOff';\n\nexport default function Main() {\n    const [password, setPassword] = useState(\"\");\n    const [platform, setPlatform] = useState(\"\");\n    const [superSecretPassword, setSuperSecretPassword] = useState(\"\");\n    const [showPassword, setShowPassword] = React.useState(false);\n    const [showSuperSecretPassword, setShowSuperSecretPassword] = React.useState(false);\n    const [snackBarOpen, setSnackBarOpen] = useState(false)\n\n\n    const handleClickShowPassword = () => setShowPassword((show) => !show);\n    const handleClickShowSuperSecretPassword = () => setShowSuperSecretPassword((show) => !show);\n    const handleMouseDownPassword = (event: React.MouseEvent<HTMLButtonElement>) => {\n        event.preventDefault();\n    };\n    const handleCopyClick = () => {\n        setSnackBarOpen(true)\n        navigator.clipboard.writeText(superSecretPassword);\n    }\n\n    return (\n        <Grid\n            container\n            direction=\"column\"\n            justifyContent=\"center\"\n            alignItems=\"center\"\n        >\n            <FormControl\n                sx={{m: 1, width: '30ch'}}\n                variant=\"outlined\">\n                <InputLabel htmlFor=\"outlined-adornment-password\">Password</InputLabel>\n                <OutlinedInput\n                    value={password}\n                    onChange={(newValue) => {\n                        if (password.length < 20) {\n                            setPassword(newValue.target.value)\n                        } else {\n                            setPassword(password.substring(0, password.length - 1))\n                        }\n                    }\n                    }\n                    id=\"outlined-adornment-password\"\n                    type={showPassword ? 'text' : 'password'}\n                    endAdornment={\n                        <InputAdornment position=\"end\">\n                            <IconButton\n                                aria-label=\"toggle password visibility\"\n                                onClick={handleClickShowPassword}\n                                onMouseDown={handleMouseDownPassword}\n                                edge=\"end\"\n                                sx={{\"&:hover\": {color: \"primary.main\"}}}\n                            >\n                                {showPassword ? <VisibilityOff/> : <Visibility/>}\n                            </IconButton>\n                        </InputAdornment>\n                    }\n                    label=\"Password\"\n                />\n            </FormControl>\n            <FormControl sx={{m: 1, width: '30ch'}} variant=\"outlined\">\n                <InputLabel htmlFor=\"outlined-platform\">Platform</InputLabel>\n                <OutlinedInput\n                    id=\"outlined-platform\"\n                    label=\"Platform\"\n                    placeholder=\"like Facebook, Instagram...\"\n                    onChange={(newValue) => {\n                        if (password.length < 20) {\n                            setPlatform(newValue.target.value)\n                        } else {\n                            setPlatform(password.substring(0, password.length - 1))\n                        }\n                    }}\n                />\n            </FormControl>\n            <Button\n                sx={{m: 1, width: '30ch', height: 50}}\n                variant=\"contained\"\n                disabled={password.length === 0 || platform.length === 0}\n                onClick={() => {\n                    setSuperSecretPassword(generateSuperSecretPassword);\n                }}\n            >\n                generate\n            </Button>\n            {superSecretPassword.length !== 0 &&\n                <FormControl sx={{m: 1, width: '30ch'}} variant=\"outlined\">\n                    <InputLabel htmlFor=\"outlined-adornment-password\">{platform} password</InputLabel>\n                    <OutlinedInput\n                        onChange={(newValue) => setPassword(newValue.target.value)}\n                        id=\"outlined-adornment-password\"\n                        type={showSuperSecretPassword ? 'text' : 'password'}\n                        value={superSecretPassword}\n                        endAdornment={\n                            <InputAdornment position=\"end\">\n                                <IconButton\n                                    aria-label=\"copy to clipboard\"\n                                    onClick={handleCopyClick}\n                                    edge=\"end\"\n                                    sx={{\"&:hover\": {color: \"primary.main\"}}}\n                                >\n                                    <ContentCopyIcon/>\n                                </IconButton>\n                                <Snackbar\n                                    sx={{color: \"primary.main\"}}\n                                    open={snackBarOpen}\n                                    onClose={() => setSnackBarOpen(false)}\n                                    autoHideDuration={2000}\n                                    message=\"Copied to clipboard\"\n                                />\n                                <IconButton\n                                    aria-label=\"toggle password visibility\"\n                                    onClick={handleClickShowSuperSecretPassword}\n                                    onMouseDown={handleMouseDownPassword}\n                                    edge=\"end\"\n                                    sx={{\"&:hover\": {color: \"primary.main\"}}}\n                                >\n                                    {showPassword ? <VisibilityOff/> : <Visibility/>}\n                                </IconButton>\n                            </InputAdornment>\n                        }\n                        label=\"Password\"\n                    />\n                </FormControl>\n            }\n        </Grid>\n    )\n        ;\n\n\n    function generateSuperSecretPassword() {\n        let hash = calculateCurrentHash();\n        hash = normilizeHash(hash);\n        return getStrongPasswordFromHash(hash);\n    }\n\n    function calculateCurrentHash() {\n        const mess = \"My$ecret*SDls\" + password + platform;\n        let hash = 1, i, chr;\n        for (i = 0; i < mess.length; i++) {\n            chr = mess.charCodeAt(i);\n            hash = ((hash << 5) - hash) + chr;\n            hash |= 0; // Convert to 32bit integer\n        }\n        return hash;\n    }\n\n    function normilizeHash(hash) {\n        let minLimit = Math.pow(2, 24);\n        if (hash < 0) {\n            hash = hash * -1;\n        }\n        while (hash < minLimit) {\n            hash *= 2;\n        }\n        return hash;\n    }\n\n    function getStrongPasswordFromHash(hash) {\n        let superSecretPassword = \"\"\n        while (superSecretPassword.length !== 15) {\n            let cur = Math.round(33 + hash % 87);\n            if (cur === 34 || cur === 39 || cur === 47 || cur === 58 || cur === 59 || cur === 96) {\n                cur = cur + 2;\n            }\n            superSecretPassword = superSecretPassword + String.fromCharCode(cur);\n            hash = hash / 3;\n        }\n\n        let hasLower = false;\n        let hasUpper = false;\n        let hasDigit = false;\n        let hasSpecialChar = false;\n        for (let i = 0; i < superSecretPassword.length; i++) {\n            if (superSecretPassword[i] >= \"a\" && superSecretPassword[i] <= \"z\") {\n                hasLower = true;\n            } else if (superSecretPassword[i] >= \"A\" && superSecretPassword[i] <= \"Z\") {\n                hasUpper = true;\n            } else if (superSecretPassword[i] >= \"0\" && superSecretPassword[i] <= \"9\") {\n                hasDigit = true;\n            } else {\n                hasSpecialChar = true;\n            }\n        }\n\n        if (!(hasLower && hasUpper && hasDigit && hasLower && hasSpecialChar)) {\n            superSecretPassword = superSecretPassword.substring(0, 5) + \"J6b#\" + superSecretPassword.substring(9, 15);\n        }\n\n        return superSecretPassword;\n    }\n}","// src/componetns/Footer.tsx\n\nimport React, {FC, ReactElement} from \"react\";\nimport {Grid, IconButton, Typography} from \"@mui/material\";\nimport LinkedInIcon from \"@mui/icons-material/LinkedIn\";\nimport GitHubIcon from '@mui/icons-material/GitHub';\n\nexport const Footer: FC = (): ReactElement => {\n    return (\n                <Grid container direction=\"row\"\n                      alignItems=\"center\"\n                      justifyContent=\"space-evenly\"\n                      sx={{\n                          width: \"100%\",\n                          height: \"auto\",\n                          paddingTop: \"1rem\",\n                      }}\n                >\n                    <Grid item xs={9}>\n                        <Typography color=\"textSecondary\" variant=\"subtitle1\"\n                                    sx={{\"&:hover\": {color: \"primary.main\"}}}\n                        >\n                            {`Made with Love, React & Material UI`}\n                        </Typography>\n                    </Grid>\n\n                    <Grid item xs={1}>\n\n                        <IconButton\n                            sx={{\"&:hover\": {color: \"primary.main\"}}}\n                        >\n                            <GitHubIcon onClick={() => window.open('https://github.com/kaxuna', '_blank')}/>\n                        </IconButton>\n                        <IconButton\n                            sx={{\"&:hover\": {color: \"primary.main\"}}}\n                        >\n                            <LinkedInIcon\n                                onClick={() => window.open('https://www.linkedin.com/in/kakha-philauri-61a260147/', '_blank')}/>\n                        </IconButton>\n                    </Grid>\n                </Grid>\n    );\n};\n\nexport default Footer;","import './App.css';\nimport React from \"react\";\nimport Navbar from './components/Navbar';\nimport Main from './components/Main';\nimport image from './/img.png'\nimport Footer from \"./components/Footer\";\nimport {Grid} from \"@mui/material\";\n\nimport {ThemeProvider, createTheme} from '@mui/material/styles';\nimport CssBaseline from '@mui/material/CssBaseline';\n\nconst darkTheme = createTheme({\n    palette: {\n        mode: 'dark',\n    },\n});\n\nfunction App() {\n    return (\n        <ThemeProvider theme={darkTheme}>\n            <CssBaseline/>\n            <Grid container\n                  direction=\"column\"\n                  justifyContent=\"center\"\n                  alignItems=\"center\"\n                  style={{\n                      backgroundImage: `url(${image})`,\n                      backgroundSize: \"cover\",\n                      minWidth: \"100%\",\n                      height: \"100vh\",\n                      maxHeight: \"100vh\",\n                  }}\n            >\n                <Grid item xs={4}\n                      container\n                      justifyContent=\"center\"\n                      alignItems=\"center\"\n                      style={{\n                          minWidth: \"100%\",\n                      }}\n                >\n                    <Navbar/>\n                </Grid>\n                <Grid item xs={6}\n                      style={{\n                          minWidth: \"100%\",\n                      }}\n                >\n                    <Main/>\n                </Grid>\n                <Grid item xs={1}\n                      style={{\n                          minWidth: \"100%\",\n                      }}>\n                    <Footer/>\n                </Grid>\n\n            </Grid>\n        </ThemeProvider>\n\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","module.exports = __webpack_public_path__ + \"static/media/img.d53e6160.png\";"],"sourceRoot":""}